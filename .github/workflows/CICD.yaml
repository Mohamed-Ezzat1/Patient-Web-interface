name: Deploy 1 tier app ITI test 
run-name: Deploy Feed Back by ${{ github.actor }} and Event is ${{ github.event_name }}

on: 
  push:
    branches:
      - main
jobs:
 CI-1tier-app:
  runs-on: ubuntu-latest
  steps:
  - name: clone repo
    uses: actions/checkout@v4
  - name: Install Python
    uses: actions/setup-python@v5
    with:
      python-version: '3.9' 

  - name: Install Requirements
    working-directory: ./project
    run: |
      python -m pip install --upgrade pip
       pip install -r requirements.txt

  - name: Test Linting 
    working-directory: ./project
    run: |
      pip install flake8
      flake8 .
    continue-on-error: true

  - name: Testing 
    run: | 
     pip install pytest
     PYTHONPATH=./project pytest
    continue-on-error: true
  - name: docker login 
    uses: docker/login-action@v3
    with:
      username: ${{ vars.DOCKERHUB_USERNAME }}
      password: ${{ secrets.DOCKERHUB_TOKEN }}
  - name: Build and push
    uses: docker/build-push-action@v6
    with:
        context: ./project
        push: true
        tags: mohamedezzat1/iti-actions:${{ github.run_number }}
 CD:
    runs-on: ubuntu-latest
    #needs:
     # - CI-1tier-app
    steps:
      - name: clone repo
        uses: actions/checkout@v4

      - name: Save SSH Private Key
        run: |
         echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
         chmod 600 key.pem    
      - name: Install Minikube on EC2 and Deploy App
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem k8s/app.yaml ubuntu@ec2-3-91-134-128.compute-1.amazonaws.com:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-3-91-134-128.compute-1.amazonaws.com << 'EOF'
      - name: update and install
        run: |
          sudo apt update -y
          sudo apt install -y curl wget apt-transport-https conntrack 
          CRIDOCKERD_VERSION="0.3.1"
          wget https://github.com/Mirantis/cri-dockerd/releases/download/v${CRIDOCKERD_VERSION}/cri-dockerd-${CRIDOCKERD_VERSION}.amd64.tgz

          tar -xvf cri-dockerd-${CRIDOCKERD_VERSION}.amd64.tgz
          sudo mv cri-dockerd/cri-dockerd /usr/local/bin/
          rm -rf cri-dockerd*
          CRICTL_VERSION="v1.29.0"
          wget https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz
          sudo tar zxvf crictl-${CRICTL_VERSION}-linux-amd64.tar.gz -C /usr/local/bin
          rm crictl-${CRICTL_VERSION}-linux-amd64.tar.gz
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          minikube start --driver=none
      - name: deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-3-91-134-128.compute-1.amazonaws.com << 'EOF'
          sudo kubectl apply -f /home/ubuntu/app.yaml
          kubectl port-forward service/service-web 8080:6000
